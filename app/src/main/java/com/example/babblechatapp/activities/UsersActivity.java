package com.example.babblechatapp.activities;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.os.Parcelable;
import android.view.View;

import com.example.babblechatapp.adapters.UserAdapter;
import com.example.babblechatapp.databinding.ActivityUsersBinding;
import com.example.babblechatapp.listeners.UserListener;
import com.example.babblechatapp.models.User;
import com.example.babblechatapp.utilities.Constants;
import com.example.babblechatapp.utilities.PreferenceManager;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;

import java.util.ArrayList;
import java.util.List;

public class UsersActivity extends AppCompatActivity implements UserListener {

    // this is the auto-binding generated by Java
    private ActivityUsersBinding binding;
    private PreferenceManager preferenceManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityUsersBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        preferenceManager = new PreferenceManager(getApplicationContext());
        getUsers();
        setListeners();
    }

    private void setListeners() {
        binding.imageBack.setOnClickListener(v -> onBackPressed()); // built-in function, used to go back to previous Activity
    }

    private void getUsers() {
        loading(true);
        FirebaseFirestore database = getDatabase();
        database.collection(Constants.KEY_COLLECTION_USERS)
                .get()
                .addOnCompleteListener(queryDocumentSnapshots -> {
                    loading(false);
                    displayListOfUsers(queryDocumentSnapshots);
                });
    }

    @NonNull
    private FirebaseFirestore getDatabase() {
        return FirebaseFirestore.getInstance();
    }

    private void displayListOfUsers(com.google.android.gms.tasks.Task<com.google.firebase.firestore.QuerySnapshot> queryDocumentSnapshots) {
        String currentUserId = preferenceManager.getString(Constants.KEY_USER_ID);
        if (queryDocumentSnapshots.isSuccessful() && queryDocumentSnapshots.getResult() != null) {
            List<User> users = new ArrayList<>();
            for (QueryDocumentSnapshot queryDocumentSnapshot : queryDocumentSnapshots.getResult()) {
                if (currentUserId.equals(queryDocumentSnapshot.getId())) continue; // if the user is the current user -> not display it
                addUserFromDBToUsers(users, queryDocumentSnapshot);
            }
            setUsersToRecyclerView(users);
        } else {
            showErrorMessage();
        }
    }


    private void setUsersToRecyclerView(List<User> users) {
        if (users.size() > 0) {
            // use UserAdapter to display from code data -> appearance
            UserAdapter userAdapter = new UserAdapter(users, this);
            binding.usersRecyclerView.setAdapter(userAdapter);
            binding.usersRecyclerView.setVisibility(View.VISIBLE);
        } else {
            showErrorMessage();
        }
    }

    private void addUserFromDBToUsers(List<User> users, QueryDocumentSnapshot queryDocumentSnapshot) {
        User user = new User();
        user.name = queryDocumentSnapshot.getString(Constants.KEY_NAME);
        user.email = queryDocumentSnapshot.getString(Constants.KEY_EMAIL);
        user.image = queryDocumentSnapshot.getString(Constants.KEY_IMAGE);
        user.token = queryDocumentSnapshot.getString(Constants.KEY_FCM_TOKEN);
        user.id = queryDocumentSnapshot.getId();
        users.add(user);
    }

    private void showErrorMessage() {
        binding.textErrorMessage.setText(String.format("%s", "No user available"));
        binding.textErrorMessage.setVisibility(View.INVISIBLE);
    }

    private void loading(Boolean isLoading) {
        if (isLoading) { // this loads the progress bar when the information not finish loading
            binding.progressBar.setVisibility(View.VISIBLE);
        } else {
            binding.progressBar.setVisibility(View.INVISIBLE);
        }
    }

    @Override
    public void onUserClicked(User user) {
        Intent intent = new Intent(getApplicationContext(), ChatActivity.class);
        intent.putExtra(Constants.KEY_USER, user);
        startActivity(intent);
        finish();
    }

}